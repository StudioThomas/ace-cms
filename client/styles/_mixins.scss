$vendors: webkit moz ms o spec;

@mixin font-size($base-font-size) {
    $rem-ratio: $base-font-size / 16px;
    font-size: $base-font-size;
    font-size: #{$rem-ratio}rem;
}

@function prefix($property, $vendors) {
    $vendor-prefixed-properties: transform filter background-clip background-size;
    $result: ();
    @each $prefix in $vendors {
        @if index($vendor-prefixed-properties, $property) {
            $property: -#{$prefix}-#{$property};
        }
        $result: append($result, $property);
    }
    @return $result;
}

@function trans-prefix($transition, $prefix) {
    $prefixed: ();
    @each $trans in $transition {
        $prop-name: nth($trans, 1);
        $vendor-prop-name: prefix($prop-name, $prefix);
        $prop-vals: nth($trans, 2);
        $prefixed: append($prefixed, $vendor-prop-name $prop-vals);
    }
    @return $prefixed;
}

@mixin transition($values) {
    $transitions: ();
    @each $declaration in $values {
        $prop: nth($declaration, 1);
        $prop-opts: ();
        $length: length($declaration);
        @for $i from 2 through $length {
            $prop-opts: append($prop-opts, nth($declaration, $i));
        }
        $trans: $prop, $prop-opts;
        $transitions: append($transitions, $trans, comma);
    }
    transition: $values;
    -webkit-transition: trans-prefix($transitions, webkit);
    -moz-transition: trans-prefix($transitions, moz);
    -o-transition: trans-prefix($transitions, o);
}

@mixin filter($filter-type, $filter-amount) {
    filter: $filter-type + unquote("(#{$filter-amount})");
}

@mixin ellipsis($use: true) {
    @if $use {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        -o-text-overflow: ellipsis;
    }
    @else {
        white-space: normal;
        overflow: visible;
        text-overflow: visible;
        -o-text-overflow: visible;
    }
}

@mixin abs($dist: 0) {
    position: absolute;
    top: $dist;
    bottom: $dist;
    left: $dist;
    right: $dist;
}

@mixin silver-bullet {
    transform: translate3d(0,0,0);
    -webkit-backface-visibility: hidden;
}

@mixin vertical-align {
    position: relative;
    top: 50%;
    transform: translateY(-50%);
}

@mixin horizontal-align {
    position: relative;
    left: 50%;
    @include transform(translateX(-50%));
}

@mixin center-align {
    position: relative;
    left: 50%;
    top: 50%;
    @include transform(translate(-50%, -50%));
}

@mixin placeholder-color($color: #000) {
    &::-webkit-input-placeholder {
        color: $color;
    }
    &:-moz-placeholder {
        color: $color;
    }
    &::-moz-placeholder {
        color: $color;
    }
    &:-ms-input-placeholder {
        color: $color;
    }
}

@mixin keyframes($name) {
    @-webkit-keyframes #{$name} {
        @content;
    }

    @-moz-keyframes #{$name} {
        @content;
    }

    @-ms-keyframes #{$name} {
        @content;
    }

    @keyframes #{$name} {
        @content;
    }
}

// use of keyframes mixin
// @include keyframes(bgcolor) {
//  0% {
//      background-color: #ffccf2;
//  }
//  50% {
//      background-color: #ccffcc;
//  }
//  100% {
//      background-color: #ccffff;
//  }
// }

/**
 * Google Material Design style card depth
 * Can receive an int between -5 and 5 (negatives use inset shadows) ex: @include depth(5); @include depth(-3)
 */

@mixin depth($layer) {
    @if $layer > 0 {
        $inset: 0;
        $offset: null;
    }
    @else {
        $inset: inset;
        $offset: 1px;
        $layer: $layer * -1;
    }
    box-shadow: $inset $offset 1px*($layer/4) 4px*$layer rgba(100, 100, 100, .1*$layer);
}

@mixin text-depth($layer) {
    @if $layer > 0 {
        $inset: 0;
        $offset: null;
    }
    @else {
        $inset: inset;
        $offset: 1px;
        $layer: $layer * -1;
    }
    text-shadow: $inset $offset 1px*($layer/2) 4px*$layer rgba(100, 100, 100, .2*$layer);
}

@mixin scrollbars($bar: white, $handle: #cccccc, $width: 8px, $radius: 4px, $border: 1px) {
    ::-webkit-scrollbar {
        width: $width;
        height: $width;
    }
    ::-webkit-scrollbar, ::-webkit-scrollbar-track, ::-webkit-scrollbar-track-piece {
        background-color: $bar;
    }
    ::-webkit-scrollbar-thumb {
        background-color: rgba($handle, 0.9);
        border-radius: $radius;
        border: $border solid $bar;
        &:hover {
            background-color: rgba($handle, 1);
        }
    }
}

// :-webkit-full-screen {
// }
// :-moz-full-screen {
// }
// :-ms-fullscreen {
// }
// :fullscreen {
// }

@mixin input-underline() {
    box-shadow: inset 0 -1px 0 $grey-lighter;
}

@mixin input-underline-focus() {
    box-shadow: inset 0 -2px 0 $brand-primary !important;
}
